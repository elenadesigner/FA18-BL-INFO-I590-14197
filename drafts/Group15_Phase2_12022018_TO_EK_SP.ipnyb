{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# IU Python Final_Phase 1: Tristen O'Brien, Elena Kirzhner, Sidd Pratap\n",
    "Due Sunday Nov 18 @ 11:59pm EST"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "INSTRUCITONS & DELIVERABLES\n",
    "\n",
    "No LATE submission allowed.\n",
    "\n",
    "For submission your need TWO items:\n",
    "\n",
    "1. Type a URL address for your team's github with you code, data, readme file with each member contribution explicitly stated. It is your responsibility that github content is accessible to instructors. Grade is based on group work and also on individual contribution.\n",
    "\n",
    "2. Upload a notebook file (ipynb) separately\n",
    "\n",
    "\n",
    "Grading criteria 30 pts\n",
    "\n",
    "Data cleaning - report Number of NaN, replace ?, impute NaN by the column mean. 5 pts\n",
    "\n",
    "Data Stats 5pts\n",
    "\n",
    "Plotting Scatterplot and Bar Plot must have titles,y axis and x axis names, non-default colors. 9 histograms (subfigures) do not have to have titles. 5pts\n",
    "\n",
    "Import libraries, Proper data import 5pts\n",
    "\n",
    "Github set up with one folder for code and one folder for dataset 5pts [if you do not have folders, there will be no penalty. Having specific folders for code and data is a good practice].\n",
    "\n",
    "Readme file with contributions 5pts"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data & Library Import"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from pandas import read_csv\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.style.use('seaborn-deep')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Scn  A2  A3  A4  A5  A6  A7  A8  A9  A10  CLASS\n",
      "0  1000025   5   1   1   1   2   1   3   1    1      2\n",
      "1  1002945   5   4   4   5   7  10   3   2    1      2\n",
      "2  1015425   3   1   1   1   2   2   3   1    1      2\n",
      "3  1016277   6   8   8   1   3   4   3   7    1      2\n",
      "4  1017023   4   1   1   3   2   1   3   1    1      2\n",
      "        Scn  A2  A3  A4  A5  A6 A7  A8  A9  A10  CLASS\n",
      "694  776715   3   1   1   1   3  2   1   1    1      2\n",
      "695  841769   2   1   1   1   2  1   1   1    1      2\n",
      "696  888820   5  10  10   3   7  3   8  10    2      4\n",
      "697  897471   4   8   6   4   3  4  10   6    1      4\n",
      "698  897471   4   8   8   5   4  5  10   4    1      4\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array(['Scn', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10',\n",
       "       'CLASS'], dtype=object)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"Breast-Cancer-Wisconsin.csv\") \n",
    "print(df.head())\n",
    "print(df.tail())\n",
    "df.columns.values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"A7\"] = df[\"A7\"].replace('?', np.NaN) #Replace ? by NaN in column A7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"A7\"] = pd.to_numeric(df['A7']) #Apply pandas function pd.to_numeric() for column A7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Scn       0\n",
      "A2        0\n",
      "A3        0\n",
      "A4        0\n",
      "A5        0\n",
      "A6        0\n",
      "A7       16\n",
      "A8        0\n",
      "A9        0\n",
      "A10       0\n",
      "CLASS     0\n",
      "dtype: int64\n",
      "\n",
      "There are 16 NaN (null values) in column A7\n"
     ]
    }
   ],
   "source": [
    "print (df.isnull().sum())\n",
    "print()\n",
    "print (\"There are\", df['A7'].isnull().sum(), \"NaN (null values) in column A7\")#Report how many NaN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Replace NaN values with the mean of column A7. \n",
    "#Use fillna() - find how to calculate mean of the column, add a parameter skipna=TRUE. \n",
    "\n",
    "df_clean = df.fillna(df.mean(skipna=True))\n",
    "\n",
    "#Apply this function to the entire df - you do not need to specify here column A7\n",
    "\n",
    "#CODE NOTES: df.fillna(df[\"A7\"].mean(skipna=True)) if only replacing column A7\n",
    " \n",
    "#CODE NOTES: use column 23 as a check, this originally han \"?\" that should be replaced by NaN, then by A7 Mean\n",
    "# check A7 mean using df.describe(), below in Data Stats Section"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Scn          A2          A3          A4          A5  \\\n",
      "count  6.990000e+02  699.000000  699.000000  699.000000  699.000000   \n",
      "mean   1.071704e+06    4.417740    3.134478    3.207439    2.806867   \n",
      "std    6.170957e+05    2.815741    3.051459    2.971913    2.855379   \n",
      "min    6.163400e+04    1.000000    1.000000    1.000000    1.000000   \n",
      "25%    8.706885e+05    2.000000    1.000000    1.000000    1.000000   \n",
      "50%    1.171710e+06    4.000000    1.000000    1.000000    1.000000   \n",
      "75%    1.238298e+06    6.000000    5.000000    5.000000    4.000000   \n",
      "max    1.345435e+07   10.000000   10.000000   10.000000   10.000000   \n",
      "\n",
      "               A6          A7          A8          A9         A10       CLASS  \n",
      "count  699.000000  699.000000  699.000000  699.000000  699.000000  699.000000  \n",
      "mean     3.216023    3.544656    3.437768    2.866953    1.589413    2.689557  \n",
      "std      2.214300    3.601852    2.438364    3.053634    1.715078    0.951273  \n",
      "min      1.000000    1.000000    1.000000    1.000000    1.000000    2.000000  \n",
      "25%      2.000000    1.000000    2.000000    1.000000    1.000000    2.000000  \n",
      "50%      2.000000    1.000000    3.000000    1.000000    1.000000    2.000000  \n",
      "75%      4.000000    5.000000    5.000000    4.000000    1.000000    4.000000  \n",
      "max     10.000000   10.000000   10.000000   10.000000   10.000000    4.000000  \n"
     ]
    }
   ],
   "source": [
    "print (df_clean.describe()) #Provide the summary statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(699, 11)\n"
     ]
    }
   ],
   "source": [
    "print(df.shape) #Find number of columns and number of rows \n",
    "# hint use ___.shape[] - use a proper index for column and row (consult pandas)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "number_cols = len(df.columns)\n",
    "number_rows = len(df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 699 rows and 11 columns\n"
     ]
    }
   ],
   "source": [
    "print (\"There are\", number_rows, \"rows and\", number_cols, \"columns\") #Report how many observations (row) and columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "699 rows\n",
      "11 columns\n"
     ]
    }
   ],
   "source": [
    "# OR\n",
    "# Find number of columns and number of rows - hint use ___.shape[]\n",
    "# TMTOWDYI\n",
    "print(str(df.shape[0]) + \" rows\")\n",
    "print(str(df.shape[1]) + \" columns\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "there are 645 unique ID values in the Scn Column\n"
     ]
    }
   ],
   "source": [
    "#Report how many unique id values (column Scn) \n",
    "unique_ids = len(df.Scn.unique()) \n",
    "print(\"there are\", unique_ids, \"unique ID values in the Scn Column\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plots: Histogram & Bar Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 9 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.DataFrame.hist(df.loc[:, 'A2':'A10'], grid = False, color = 'y') #Draw histograms for columns A2-A10\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.value_counts(df['CLASS'].values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2    458\n",
      "4    241\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print (df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "benign = df2[2]\n",
    "malignant = df2[4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Draw a bar plot for CLASS\n",
    "df2[[2,4]] #getting errors using ['benign','malignant'] \n",
    "plt.title('Bar plot | Breast Cancer class counts')\n",
    "plt.xlabel('Class (2 = benign, 4 = malignant)')\n",
    "plt.ylabel('Values | Count')\n",
    "\n",
    "df2.plot.bar(color = (0.2,0.1,0.4))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Draw a scatterplot of any two columns\n",
    "normal_nuclei = df['A9']\n",
    "mitosis = df['A10']\n",
    "plt.title('Pattern Separation Scatterplot | Normal_Nuclei(A9) vs. Mitosis(A10)')\n",
    "plt.xlabel('Normal_Nuclei(A9)')\n",
    "plt.ylabel('Mitosis(A10)')\n",
    "plt.scatter(normal_nuclei, mitosis, c='DarkBlue')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Summarize by reporting which values might need standardization in the future (too much variation) \n",
    "# and any other observations that you may discover as a Data Scientist."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PHASE 1: SUMMARY\n",
    "\n",
    "Using a Correlation matrix and visualizing with a heatmap (below), we observed that columns A3,A4 & A7 had correlation values of 0.817904, 0.818934 & 0.822696 (respectively) to the outcome variable CLASS (benign, malignant). \n",
    "\n",
    "These are the maximum correlations and highly signigifant, thus these would be the columns of high interst in future classifier models.\n",
    "\n",
    "With respect to standardization, we observed the highest variance in A7, A8 & A4 (3.544656, 3.437768 & 3.207439 Standard Deviations, respectively). \n",
    "\n",
    "Looking at the individual histograms (below), we also conclude that A7 (Bare Nuclei) has the widest bifurcation in values. With many 1's and 10's at the extremes. Additionally, A10 (Mitosis) had many 1's and few other values, so the least variance (STDEV). \n",
    "\n",
    "Overall, we plan to persue a ranked normalization based on these findings, prioritizing and ranking columns. \n",
    "Columns A7 (Bare Nuclei) would be the prioritized column to standardize. Since all columns besice Scn (IDs) & CLASS (response variable) are on the same scale of grading (1-10), Standardization to the column average & setting STDEV to 1 seems to be a good first pass normalization strategy.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1ffa655d5f8>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create corelation matrix visualization to look for high co-variations with CLASS\n",
    "corr = df.corr()\n",
    "sns.heatmap(corr,xticklabels=corr.columns.values,yticklabels=corr.columns.values)\n",
    "# used https://stackoverflow.com/questions/39409866/correlation-heatmap as reference and code guide"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Scn        A2        A3        A4        A5        A6        A7  \\\n",
      "A2    -0.055308  1.000000  0.644913  0.654589  0.486356  0.521816  0.593091   \n",
      "A3    -0.041603  0.644913  1.000000  0.906882  0.705582  0.751799  0.691709   \n",
      "A4    -0.041576  0.654589  0.906882  1.000000  0.683079  0.719668  0.713878   \n",
      "A5    -0.064878  0.486356  0.705582  0.683079  1.000000  0.599599  0.670648   \n",
      "A6    -0.045528  0.521816  0.751799  0.719668  0.599599  1.000000  0.585716   \n",
      "A7    -0.099248  0.593091  0.691709  0.713878  0.670648  0.585716  1.000000   \n",
      "A8    -0.060051  0.558428  0.755721  0.735948  0.666715  0.616102  0.680615   \n",
      "A9    -0.052072  0.535835  0.722865  0.719446  0.603352  0.628881  0.584280   \n",
      "A10   -0.034901  0.350034  0.458693  0.438911  0.417633  0.479101  0.339210   \n",
      "CLASS -0.080226  0.716001  0.817904  0.818934  0.696800  0.682785  0.822696   \n",
      "\n",
      "             A8        A9       A10     CLASS  \n",
      "A2     0.558428  0.535835  0.350034  0.716001  \n",
      "A3     0.755721  0.722865  0.458693  0.817904  \n",
      "A4     0.735948  0.719446  0.438911  0.818934  \n",
      "A5     0.666715  0.603352  0.417633  0.696800  \n",
      "A6     0.616102  0.628881  0.479101  0.682785  \n",
      "A7     0.680615  0.584280  0.339210  0.822696  \n",
      "A8     1.000000  0.665878  0.344169  0.756616  \n",
      "A9     0.665878  1.000000  0.428336  0.712244  \n",
      "A10    0.344169  0.428336  1.000000  0.423170  \n",
      "CLASS  0.756616  0.712244  0.423170  1.000000  \n"
     ]
    }
   ],
   "source": [
    "print(corr[1:11]) # Omit colum 0 (Scn) as it is the ID and not a measurement variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# individual histogram block for more detail and labeled axes\n",
    "\n",
    "pd.DataFrame.hist(df[['A3']], grid = False, color = 'g')\n",
    "plt.xlabel('A3 (Uniformity of Cell Size)')\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "\n",
    "pd.DataFrame.hist(df[['A4']], grid = False, color = 'y')\n",
    "plt.xlabel('A4 (Uniformity of Cell Shape)')\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "\n",
    "pd.DataFrame.hist(df[['A7']], grid = False, color = 'b')\n",
    "plt.xlabel('A7 (Bare Nuclei)')\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "\n",
    "pd.DataFrame.hist(df[['A8']], grid = False, color = 'r')\n",
    "plt.xlabel('A8 (Bland Chromatin)')\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "\n",
    "pd.DataFrame.hist(df[['A9']], grid = False, color = 'b')\n",
    "plt.xlabel('A9 (Normal Nuclei)')\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "\n",
    "pd.DataFrame.hist(df[['A10']], grid = False, color = 'g')\n",
    "plt.xlabel('A10 (Mitosis)')\n",
    "plt.tight_layout(rect=(0, 0, 1, 1))\n",
    "\n",
    "plt.ylabel('count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "\n",
    "\n",
    "# PHASE 2 Due Dec 2, 2018\n",
    "In the second phase you will be implementing k-means algorithm\n",
    "(do not use column CLASS) 10pts\n",
    "\n",
    "continue working with cleaned breast cancer data from the phase 1 use only columns A2-A10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Use KMeans algorithm \n",
    "\n",
    "import KMeans - use sklearn.cluster\n",
    "\n",
    "create KMeans model for n_cluster = 4\n",
    "\n",
    "fit model to your data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 1 0 3 0 2 0 0 0 0 0 0 0 0 2 3 0 0 1 0 1 3 0 1 0 1 0 0 0 0 0 0 3 0 0 0 3\n",
      " 0 1 1 3 3 2 3 3 0 1 0 0 3 3 0 3 2 1 3 3 0 1 0 3 0 3 3 0 0 0 1 2 0 0 3 0 1\n",
      " 1 0 0 0 0 0 0 0 0 0 2 3 1 2 0 0 0 0 0 0 0 0 0 0 3 2 3 0 0 0 2 0 1 2 0 1 0\n",
      " 1 1 3 0 0 0 2 0 0 0 0 2 1 2 0 1 0 1 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0\n",
      " 0 2 0 1 3 0 0 1 0 0 0 2 1 0 0 0 0 0 2 3 0 0 0 0 0 2 1 2 0 3 0 1 0 0 0 2 1\n",
      " 0 2 2 2 0 2 2 0 0 0 0 1 0 0 0 2 1 0 0 0 2 3 0 0 0 2 2 0 2 2 3 0 0 3 0 0 2\n",
      " 0 1 1 0 1 3 0 2 1 2 3 1 0 0 2 3 2 1 0 0 0 0 0 0 2 1 0 0 0 1 1 2 3 1 0 0 0\n",
      " 1 1 2 2 1 3 0 1 1 3 0 1 0 1 0 0 0 0 0 0 1 0 0 1 1 1 2 2 0 3 2 0 0 3 1 0 1\n",
      " 1 0 0 1 3 0 2 0 1 1 0 0 3 0 0 0 3 0 0 3 1 2 0 1 1 0 0 1 0 0 1 0 3 1 1 0 0\n",
      " 1 1 0 1 0 0 1 1 0 0 0 2 0 0 0 0 1 0 0 3 2 0 0 0 2 3 1 2 1 0 0 0 0 2 2 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0\n",
      " 0 0 0 0 0 3 0 1 0 1 0 0 0 0 2 0 0 0 2 0 3 0 0 0 0 0 0 1 1 3 0 0 0 1 0 0 0\n",
      " 0 0 0 0 0 2 0 0 0 2 0 0 1 3 0 0 0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 0 2 0\n",
      " 0 2 2 0 0 0 2 1 0 0 1 0 2 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 2 0 0\n",
      " 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 2 0 0 1 2 1 2 0 0 3 0 0 0 0 0 0 2 2 0 0 0 2 0 3 0 3 1\n",
      " 1 0 1 0 0 0 0 0 0 0 0 3 1 3 0 0 2 0 1 3 2 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0\n",
      " 0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0\n",
      " 0 0 3 2 2 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 3 0 0 0 0 3 3 3]\n",
      "\n",
      " length of labels-object: 699\n",
      "\n",
      "cluster counts:\n",
      " 0    458\n",
      "1     98\n",
      "2     79\n",
      "3     64\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "\n",
    "df_noclass = df_clean.loc[:, 'A2':'A10'] \n",
    "# exclude Scn + CLASS column\n",
    "\n",
    "model = KMeans(n_clusters = 4)\n",
    "model.fit(df_noclass) \n",
    "labels = model.predict(df_noclass)\n",
    "print (labels)\n",
    "#code from DataCamp \"unsupervised learning in python\" as giude source\n",
    "\n",
    "print('\\n length of labels-object:',len(labels)) \n",
    "#check for 699 values\n",
    "#so all rows have a call and range from 0-3 (4 classes)\n",
    "\n",
    "print()\n",
    "print('cluster counts:\\n', pd.value_counts(labels)) #how many of each class"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Calculate centroids \n",
    "\n",
    "print centroids - you should have a matrix with 4 row (4 clusters) and 9 columns (for each A column)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "size / shape of centroids-object (rows, columns):\n",
      " (4, 9)\n",
      "type of centroids-object:\n",
      " <class 'numpy.ndarray'>\n",
      "centroid min:\n",
      " 1.1026200873362493\n",
      "centroid max:\n",
      " 9.227848101265813\n",
      "centroids-array:\n",
      " [[2.98471616 1.26637555 1.38646288 1.31222707 2.05458515 1.35269841\n",
      "  2.08078603 1.2139738  1.10262009]\n",
      " [7.20408163 4.84693878 5.01020408 4.81632653 4.07142857 9.15861894\n",
      "  5.2244898  3.79591837 1.64285714]\n",
      " [6.72151899 8.36708861 8.40506329 7.81012658 6.73417722 9.2278481\n",
      "  7.36708861 7.82278481 3.82278481]\n",
      " [7.5625     7.421875   7.0625     4.25       5.875      3.61928075\n",
      "  5.5625     7.15625    2.234375  ]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#\n",
    "centroids = model.cluster_centers_\n",
    "print(\"size / shape of centroids-object (rows, columns):\\n\", centroids.shape)\n",
    "print(\"type of centroids-object:\\n\",type(centroids))\n",
    "print(\"centroid min:\\n\", centroids.min())\n",
    "print(\"centroid max:\\n\", centroids.max())\n",
    "print('centroids-array:\\n', centroids)\n",
    "\n",
    "# data viz of centroids\n",
    "centroids_0 = centroids[0,:]\n",
    "centroids_1 = centroids[1,:]\n",
    "centroids_2 = centroids[2,:]\n",
    "centroids_3 = centroids[3,:]\n",
    "\n",
    "x = list(range(1,10))\n",
    "\n",
    "plt.scatter(centroids_0, x, marker = 'P', color = 'r', s=100)\n",
    "plt.title(\"Centroids_0\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids_1, x, marker = 'D', color = 'y', s=100)\n",
    "plt.title(\"Centroids_1\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids_2, x, marker = 'o', color = 'g', s=100)\n",
    "plt.title(\"Centroids_2\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids_3, x, marker = 's', color = 'b', s=100)\n",
    "plt.title(\"Centroids_3\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Find the optimal number of clusters \n",
    "\n",
    "calculate inertia: (10 pts)\n",
    "\n",
    "create a range from 1 to 15 or more\n",
    "\n",
    "create an empty list for inertias values\n",
    "\n",
    "use for loop to calculate KMeans for each values\n",
    "\n",
    "plot range and inertia\n",
    "\n",
    "Add title, ylabel, xlabel\n",
    "\n",
    "specify the optimal number of clustes based on the inertia plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimun Custer Sze = 2 | Based on inflection point, \"elbow\")\n"
     ]
    }
   ],
   "source": [
    "#code from DataCamp \"unsupervised learning in python\" as giude source\n",
    "#find max / min inertia\n",
    "\n",
    "ks = range(1, 15)\n",
    "inertias = []\n",
    "\n",
    "for k in ks:\n",
    "    model = KMeans(n_clusters = k)\n",
    "    model.fit(df_noclass)\n",
    "    inertias.append(model.inertia_)\n",
    "    \n",
    "# Plot ks vs inertias\n",
    "plt.plot(ks, inertias, '-og')\n",
    "plt.title('inertias caluculated for varying cluster sizes')\n",
    "#plot.set(ylabel='Inertia')\n",
    "plt.xlabel('clusters (k)')\n",
    "#plt.ylabel('inertia')\n",
    "plt.xticks(ks)\n",
    "plt.show()\n",
    "\n",
    "print('Optimun Custer Sze = 2 | Based on inflection point, \"elbow\")')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Revise data variation 10pts\n",
    "\n",
    "apply standard deviation function for columns A2-A10\n",
    "\n",
    "plot standard deviation values - select a graphic that could display all nine values [do not use histogram], add title, legend, ylabel, xlabel. \n",
    "\n",
    "Can you capture how wide or narrow is the variation in each column?\n",
    "describe which features have a lot of data variation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "highest standard deviation (variation) is seen on A7, and A5,A7,A9 & A10 have STDEV > Mean\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A2</th>\n",
       "      <th>A3</th>\n",
       "      <th>A4</th>\n",
       "      <th>A5</th>\n",
       "      <th>A6</th>\n",
       "      <th>A7</th>\n",
       "      <th>A8</th>\n",
       "      <th>A9</th>\n",
       "      <th>A10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "      <td>699.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.417740</td>\n",
       "      <td>3.134478</td>\n",
       "      <td>3.207439</td>\n",
       "      <td>2.806867</td>\n",
       "      <td>3.216023</td>\n",
       "      <td>3.544656</td>\n",
       "      <td>3.437768</td>\n",
       "      <td>2.866953</td>\n",
       "      <td>1.589413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.815741</td>\n",
       "      <td>3.051459</td>\n",
       "      <td>2.971913</td>\n",
       "      <td>2.855379</td>\n",
       "      <td>2.214300</td>\n",
       "      <td>3.601852</td>\n",
       "      <td>2.438364</td>\n",
       "      <td>3.053634</td>\n",
       "      <td>1.715078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>6.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               A2          A3          A4          A5          A6          A7  \\\n",
       "count  699.000000  699.000000  699.000000  699.000000  699.000000  699.000000   \n",
       "mean     4.417740    3.134478    3.207439    2.806867    3.216023    3.544656   \n",
       "std      2.815741    3.051459    2.971913    2.855379    2.214300    3.601852   \n",
       "min      1.000000    1.000000    1.000000    1.000000    1.000000    1.000000   \n",
       "25%      2.000000    1.000000    1.000000    1.000000    2.000000    1.000000   \n",
       "50%      4.000000    1.000000    1.000000    1.000000    2.000000    1.000000   \n",
       "75%      6.000000    5.000000    5.000000    4.000000    4.000000    5.000000   \n",
       "max     10.000000   10.000000   10.000000   10.000000   10.000000   10.000000   \n",
       "\n",
       "               A8          A9         A10  \n",
       "count  699.000000  699.000000  699.000000  \n",
       "mean     3.437768    2.866953    1.589413  \n",
       "std      2.438364    3.053634    1.715078  \n",
       "min      1.000000    1.000000    1.000000  \n",
       "25%      2.000000    1.000000    1.000000  \n",
       "50%      3.000000    1.000000    1.000000  \n",
       "75%      5.000000    4.000000    1.000000  \n",
       "max     10.000000   10.000000   10.000000  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg = np.mean(df_noclass) #print(avg)\n",
    "dev = np.std(df_noclass) #print(dev)\n",
    "\n",
    "plot = sns.barplot(x=x, y=avg, yerr=dev) # x is a list (1:9) from range(1,10)\n",
    "#plt.bar(x, avg, yerr = dev)\n",
    "plot.set(xlabel = 'Column / Measure', ylabel='Mean')\n",
    "plt.title('Varaince (mean+stdev) of tumor measures', size = 18)\n",
    "plt.xticks(np.arange(9), df_noclass.columns.values)\n",
    "plt.legend(dev, bbox_to_anchor=(1,1), loc='upper left')\n",
    "plt.show()\n",
    "\n",
    "print('highest standard deviation (variation) is seen on A7, and A5,A7,A9 & A10 have STDEV > Mean')\n",
    "df_noclass.describe() \n",
    "#note that np.std has slightly different (not significant) values than in describe() function (pandas)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Implement normalization\n",
    "\n",
    "import make_pipeline - use sklearn.pipeline \n",
    "import StandardScaler\n",
    "review datacamp if needed on how to create a pipeline\n",
    "\n",
    "use the n_cluster based on the optimal number you have identified from Inertia\n",
    "find centroids and print them\n",
    "\n",
    "Update your github code 2pts\n",
    "Update your notebook\n",
    "Update your readme file with contribution by each member for phase 2\n",
    "Submit updated version of notebook and your link to github into Phase 2 assignment [one person submit on behalf of your group]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Scaled Centroids:\n",
      " [[3.0472103  1.30257511 1.44635193 1.34334764 2.08798283 1.38000113\n",
      "  2.10515021 1.26180258 1.10944206]\n",
      " [7.15879828 6.79828326 6.72961373 5.73390558 5.472103   7.87396553\n",
      "  6.10300429 6.07725322 2.54935622]]\n",
      "\n",
      " Normalized Centroids:\n",
      " [[7.15879828 6.79828326 6.72961373 5.73390558 5.472103   7.87396553\n",
      "  6.10300429 6.07725322 2.54935622]\n",
      " [3.0472103  1.30257511 1.44635193 1.34334764 2.08798283 1.38000113\n",
      "  2.10515021 1.26180258 1.10944206]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.pipeline import make_pipeline\n",
    "from sklearn.preprocessing import Normalizer\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.cluster import KMeans\n",
    "\n",
    "# use Standard Scaler for pre-prosessing\n",
    "scaler = StandardScaler()\n",
    "kmeans = KMeans(n_clusters=2)\n",
    "\n",
    "pipeline_scaled = make_pipeline(scaler, kmeans) #create a pipeline\n",
    "pipeline_scaled.fit(df_noclass) # Fit the pipeline to samples\n",
    "\n",
    "# Calculate the cluster labels: labels\n",
    "labels_scaled = pipeline_scaled.predict(df_noclass)\n",
    "model_scaled = kmeans.fit(df_noclass)\n",
    "print('\\n Scaled Centroids:\\n',model_scaled.cluster_centers_) #find centroids and print them\n",
    "\n",
    "#use Normalizer for pre-processing\n",
    "normalizer = Normalizer()\n",
    "kmeans = KMeans(n_clusters=2)\n",
    "\n",
    "pipeline_normalized = make_pipeline(normalizer, kmeans)\n",
    "pipeline_normalized.fit(df_noclass)\n",
    "\n",
    "labels_normalized = pipeline_normalized.predict(df_noclass)\n",
    "model_normalized = kmeans.fit(df_noclass)\n",
    "print('\\n Normalized Centroids:\\n', model_normalized.cluster_centers_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'sklearn.pipeline.Pipeline'>\n",
      "Pipeline(memory=None,\n",
      "     steps=[('standardscaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('kmeans', KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n",
      "    n_clusters=2, n_init=10, n_jobs=1, precompute_distances='auto',\n",
      "    random_state=None, tol=0.0001, verbose=0))])\n",
      "<class 'sklearn.pipeline.Pipeline'>\n",
      "Pipeline(memory=None,\n",
      "     steps=[('normalizer', Normalizer(copy=True, norm='l2')), ('kmeans', KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n",
      "    n_clusters=2, n_init=10, n_jobs=1, precompute_distances='auto',\n",
      "    random_state=None, tol=0.0001, verbose=0))])\n"
     ]
    }
   ],
   "source": [
    "print(type(pipeline_scaled)) \n",
    "print(pipeline_scaled)\n",
    "\n",
    "print(type(pipeline_normalized)) \n",
    "print(pipeline_normalized)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "size / shape of centroids2-object (rows, columns):\n",
      " (14, 9)\n",
      "type of centroids2-object:\n",
      " <class 'numpy.ndarray'>\n",
      "centroids2 min:\n",
      " 1.02788844621514\n",
      "centroids2 max:\n",
      " 9.875000000000002\n",
      "centroids2-array:\n",
      " [[8.23529412 9.11764706 8.70588235 7.58823529 8.70588235 6.76470588\n",
      "  6.17647059 8.23529412 9.41176471]\n",
      " [4.07171315 1.24701195 1.39840637 1.34661355 2.02788845 1.28176605\n",
      "  2.02788845 1.15139442 1.02788845]\n",
      " [8.5        5.89285714 6.35714286 3.67857143 4.53571429 9.03571429\n",
      "  6.53571429 8.60714286 2.21428571]\n",
      " [5.44444444 8.94444444 8.33333333 6.66666667 4.61111111 7.61111111\n",
      "  7.66666667 2.77777778 1.72222222]\n",
      " [5.71428571 5.71428571 4.42857143 9.28571429 6.85714286 2.42857143\n",
      "  3.28571429 2.57142857 1.28571429]\n",
      " [5.89285714 3.14285714 3.57142857 2.32142857 3.75       2.71747542\n",
      "  4.14285714 4.57142857 1.75      ]\n",
      " [7.375      4.54166667 4.29166667 9.125      4.54166667 9.875\n",
      "  5.875      3.875      2.58333333]\n",
      " [6.66666667 9.06666667 8.96666667 9.2        5.93333333 9.56666667\n",
      "  7.83333333 8.8        2.63333333]\n",
      " [3.2        5.73333333 6.53333333 7.26666667 6.53333333 8.8363104\n",
      "  5.73333333 8.26666667 2.2       ]\n",
      " [7.89285714 8.39285714 7.53571429 4.46428571 5.14285714 3.07461828\n",
      "  6.35714286 9.21428571 1.96428571]\n",
      " [1.2459893  1.12299465 1.21390374 1.13903743 1.97326203 1.26881249\n",
      "  1.98930481 1.06417112 1.10160428]\n",
      " [9.         9.42857143 9.         3.28571429 9.07142857 8.42857143\n",
      "  6.5        3.35714286 1.57142857]\n",
      " [4.68181818 3.5        4.31818182 2.81818182 4.81818182 9.36363636\n",
      "  4.09090909 3.54545455 1.27272727]\n",
      " [9.23333333 4.93333333 5.16666667 3.06666667 3.23333333 8.46666667\n",
      "  4.53333333 2.5        1.9       ]]\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXAAAAEICAYAAABGaK+TAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4zLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvIxREBQAAEuFJREFUeJzt3X+Q7XV93/HnK1wsPzynKKxUQHNjYqkZJiDdoRgsbcBkQBk1GTuFVMem1ps/aIQk08RoG2NnYptOxtE/Ujt3oNEZkRQRWuM0DEwSkzEV0gUhcr0wVsMvQe6i4l6kKuC7f5xznWXZu+e73PPd737ufT5mvrNn93zO97x2797Xfs/nfH+kqpAktedHhg4gSXp+LHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtcR7wk70ly1Qb335fkdVuZSerCAteWSfKLSZaSPJHkkSR/kuS1h7jO30ny8UNZR1V9oKr+9aGs42CSnJTkr5J8I8njST6f5Lw+nktHHgtcWyLJrwEfAj4AnAy8HPgvwJt6ft4kGfL3/AngXwELwIuA3wP+OMmOATPpMGGBq3dJ/i7wH4DLq+qGqvpOVT1VVX9cVf82yY8keXeSr0y3VK9L8uLpY3cmqSRvT/JAkseSvHd630XAe4B/Pt2qv2v69c8m+d0kfwU8CbwiySlJPp3km0n+b5J3rsr3rK34JG9Lcv80y3vXfC/nTF9FrCR5NMkHN/req+q7VXVvVf0ACPAMkyJ/8aH/ZHWks8C1FV4DHAPceJD73wW8GfgnwCnAt4A/WDPmtcDpwIXAbyd5VVXdxGSL/r9X1Qur6sxV498G7AJGwP3AtcBD0/W/BfhAkgvXBknyk8BHpo8/BTgROG3VkA8DH66qMfDjwHVdfgBJ/gb4LvBp4Kqq2tflcdJGLHBthROBx6rq6YPc/8vAe6vqoar6HvA7wFvWTDO8v6r+X1XdBdwFnLnOelb7aFXtmT7n32PyB+A3p1vEdwJXMSnptd4CfKaq/nKa5d8DP1h1/1PATyQ5qaqeqKpbZ+QAoKp+ChgDvwh8rstjpFkscG2FbwAnbTDv+6PAjdM3+R4H9jKZajh51Zivr7r9JPDCGc/54KrbpwDfrKr9q752P3DqOo87ZfVjq+o70/wHvAP4+8A9Sf5Pkktm5Pih6R+Pa4F3J5n1B0iayQLXVvg8k+mDNx/k/geBi6vqhFXLMVX1tQ7rPtj5kFd//WHgxUlGq772cmC99T8CvOzAJ0mOY/IKYrLSqi9X1WXAS5i8IXl9kuM75FztaOAVm3yM9BwWuHpXVd8Gfhv4gyRvTnJckqOTXJzkPwP/FfjdJD8KkGQhSde9Ux4Fdm60p0lVPQj8b+A/JjkmyU8x2ZK+Zp3h1wOXJHltkhcwefP1h+tO8tYkC9M3JR+ffvmZgz13knMPrCvJsUl+k8kri9s6fn/SQVng2hJV9UHg14B/Bywz2er+N8D/YPLG4KeBm5PsB24F/lHHVX9y+vEbSe7YYNxlwE4mW+M3Au+rqlvWybkHuBz4BJOt8W8xefPzgIuAPUmemOa+tKq+u8Hz/h0mb8h+g8kW/+uBN1TVw7O/NWlj8Yo8ktQmt8AlqVEWuHSIkvyL6YFEa5c9Q2fT4c0pFElqVC/nYzjppJNq586dfaxakg5Lt99++2NVtbCZx/RS4Dt37mRpaamPVUvSYSnJ/Zt9jHPgktQoC1ySGmWBS1KjLHBJatQRWeDjMSSzl/F46KSSdHBHZIHv3z97zGbGSdIQOhV4kiuS3J1kT5Ir+w4lSZptZoEnOQN4J3AOk6ugXJLklX0HkyRtrMsW+KuAW6vqyenlqf4C+Pl+Y0mSZulS4HcD5yc5cXp1ktez6oolByTZNb1a99Ly8vK8c0qS1phZ4FW1l8mlo24BbmJyQdnnXJy2qnZX1WJVLS4sbOpwfknS89DpTcyqurqqzq6q84FvAl/uN5YkaZZOJ7NK8pKq2pfk5cAvAK/pN5YkaZauZyP8VJITgaeAy6vqWz1mkiR10KnAq+of9x1kK41G3Q7SGY36zyJJz1cv5wPf7lZWhk4gSYfuiDyUXpIOBxa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtcOsyMx5DMXsbjoZPqUFng0mGmy6mSNzNO21enAk/yq0n2JLk7ybVJjuk7mCRpYzMLPMmpwLuAxao6AzgKuLTvYJKkjXWdQtkBHJtkB3Ac8HB/kSRJXcws8Kr6GvD7wAPAI8C3q+rmteOS7EqylGRpeXl5/kklSc/SZQrlRcCbgB8DTgGOT/LWteOqandVLVbV4sLCwvyTSpKepcsUyuuAv62q5ap6CrgB+Ol+Y0mSZulS4A8A5yY5LkmAC4G9/caSJM3SZQ78NuB64A7gi9PH7O45lyRphh1dBlXV+4D39ZxF0hyMRt0O0hmN+s+ifnUqcEntWFkZOoG2iofSS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoC12FvPIZk9jIeD51U2hwLXIe9LufG3sw4abvoclHj05PcuWpZSXLlVoSTJB3czAs6VNW9wFkASY4Cvgbc2HMuSdIMm51CuRD4SlXd30cYSVJ3my3wS4Fr17sjya4kS0mWlpeXDz2ZJGlDnQs8yQuANwKfXO/+qtpdVYtVtbiwsDCvfJKkg9jMFvjFwB1V9WhfYSRJ3W2mwC/jINMnkqSt16nAkxwH/CxwQ79xJElddSrwqnqyqk6sqm/3HUiat9FovuOk7WLmfuBS61ZWhk4g9cND6SWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgR8GxmNIZi/j8dBJJc1T1ws6nJDk+iT3JNmb5DV9B1N3+/fPd5ykNnQ9H/iHgZuq6i3Tixsf12MmSVIHMws8yRg4H/iXAFX1feD7/caSJM3SZQrlFcAy8IdJvpDkqiTH95xLkjRDlwLfAZwNfKSqXg18B3j32kFJdiVZSrK0vLw855iSpLW6FPhDwENVddv08+uZFPqzVNXuqlqsqsWFhYV5ZpQkrWNmgVfV14EHk5w+/dKFwJd6TSVJmqnrXii/Alwz3QPlq8Av9RdJktRFpwKvqjuBxZ6zSJI2wSMxDwOj0XzHSWpD1ykUbWMrK0MnkDQEt8AlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXFpjPIZk9jIeD51URzoLXFpj//75jpP60ul0sknuA/YDzwBPV5UXd5CkgW3mfOA/U1WP9ZZEkrQpTqFIUqO6FngBNye5Pcmu9QYk2ZVkKcnS8vLy/BJKktbVtcDPq6qzgYuBy5Ocv3ZAVe2uqsWqWlxYWJhrSEnSc3Uq8Kp6ePpxH3AjcE6foSRJs80s8CTHJxkduA38HHB338EkSRvrshfKycCNSQ6M/0RV3dRrKknSTDMLvKq+Cpy5BVmkbWE06naQzmjUfxZpI5vZD1w6IqysDJ1A6sb9wCWpURa4JDXKApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgWtD4zEks5fxeOik0pGnc4EnOSrJF5J8ps9A2l66nBd7M+Mkzc9mtsCvAPb2FUSStDmdCjzJacAbgKv6jSNJ6qrrFviHgN8AftBjFknSJnS5Kv0lwL6qun3GuF1JlpIsLS8vzy2gJGl9XbbAzwPemOQ+4I+AC5J8fO2gqtpdVYtVtbiwsDDnmJKktWYWeFX9VlWdVlU7gUuBP6uqt/aeTJK0IfcDl6RG7djM4Kr6LPDZXpJIkjbFLXBtaDSa7zhJ87OpLXAdeVZWhk4g6WDcApekRlngktQoC1ySGmWBS1KjLHBJapQFLkmNssAlqVEWuCQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwqXHjMSSzl/F46KSaNwtcatz+/fMdp3Z0uajxMUn+OsldSfYkef9WBJMkbazL+cC/B1xQVU8kORr4XJI/qapbe84mSdrAzAKvqgKemH569HSpPkNJkmbrNAee5KgkdwL7gFuq6rZ1xuxKspRkaXl5ed45JUlrdCrwqnqmqs4CTgPOSXLGOmN2V9ViVS0uLCzMO6ckaY1N7YVSVY8zuSr9Rb2kkSR11mUvlIUkJ0xvHwu8Drin72CSpI112QvlpcDHkhzFpPCvq6rP9BtLkjRLl71Q/gZ49RZkkfQ8jEbdDtIZjfrPoq3VZQtc0ja2sjJ0Ag3FQ+klqVEWuCQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXJIaZYFLR6DxGJLZy3g8dFJtxAKXjkBdzh++mXEaRpdLqr0syZ8n2ZtkT5IrtiKYJGljXS7o8DTw61V1R5IRcHuSW6rqSz1nkyRtYOYWeFU9UlV3TG/vB/YCp/YdTJK0sU3NgSfZyeT6mLetc9+uJEtJlpaXl+eTTpJ0UJ0LPMkLgU8BV1bVc67CV1W7q2qxqhYXFhbmmVGStI5OBZ7kaCblfU1V3dBvJElSF132QglwNbC3qj7YfyRJUhddtsDPA94GXJDkzuny+p5zSZJmmLkbYVV9DsgWZJG0RUajbgfpjEb9Z9Hz12U/cEmHmZXn7IagFnkovSQ1ygKXpEZZ4JLUKAtckhplgUtSoyxwSWqUBS5JjbLAJalRFrgkNcoCl6RGWeCS1CgLXJIaZYFL+qHxGJLZy3g8dFKBBS5plS6nmN3MOPWryxV5/luSfUnu3opAkqRuumyBfxS4qOcckqRNmlngVfWXwDe3IIskaRPmNgeeZFeSpSRLy8vL81qtJOkg5lbgVbW7qharanFhYWFeq5UkHYR7oUhSoyxwSWpUl90IrwU+D5ye5KEk7+g/liRplh2zBlTVZVsRRNLwRqNuB+mMRv1n0WwzC1zSkWNlZegE2gznwCWpURa4JDXKApekRlngktSoVNX8V5rsB+6d+4oPzUnAY0OHWMNM3WzHTLA9c5mpm+2Y6fSq2tT+PX3thXJvVS32tO7nJcmSmWYzU3fbMZeZutmumTb7GKdQJKlRFrgkNaqvAt/d03oPhZm6MVN32zGXmbo5LDL18iamJKl/TqFIUqMscElq1FwLfLtdwT7Jy5L8eZK9SfYkuWLoTABJjkny10numuZ6/9CZAJIcleQLST4zdJYDktyX5ItJ7nw+u1n1IckJSa5Pcs/0d+s1A+c5ffrzObCsJLlyyEzTXL86/f2+O8m1SY4ZOhNAkiummfYM9XNaryuTvDjJLUm+PP34olnrmfcW+EfZXlewfxr49ap6FXAucHmSnxw4E8D3gAuq6kzgLOCiJOcOnAngCmDv0CHW8TNVddY22m/3w8BNVfUPgDMZ+GdWVfdOfz5nAf8QeBK4cchMSU4F3gUsVtUZwFHApUNmAkhyBvBO4Bwm/3aXJHnlAFE+ynO78t3An1bVK4E/nX6+obkW+Ha7gn1VPVJVd0xv72fyH+3UYVNBTTwx/fTo6TLou8lJTgPeAFw1ZI7tLskYOB+4GqCqvl9Vjw+b6lkuBL5SVfcPHYTJgYLHJtkBHAc8PHAegFcBt1bVk1X1NPAXwM9vdYiDdOWbgI9Nb38MePOs9Rwxc+BJdgKvBm4bNsnEdLriTmAfcEtVDZ3rQ8BvAD8YOMdaBdyc5PYku4YOA7wCWAb+cDrddFWS44cOtcqlwLVDh6iqrwG/DzwAPAJ8u6puHjYVAHcD5yc5MclxwOuBlw2c6YCTq+oRmGx8Ai+Z9YAjosCTvBD4FHBlVW2LU9ZX1TPTl7ynAedMX9oNIsklwL6qun2oDBs4r6rOBi5mMgV2/sB5dgBnAx+pqlcD36HDS92tkOQFwBuBT26DLC9iskX5Y8ApwPFJ3jpsKqiqvcDvAbcANwF3MZlqbdJhX+BJjmZS3tdU1Q1D51lr+vL7swz73sF5wBuT3Af8EXBBko8PmOeHqurh6cd9TOZ1zxk2EQ8BD616xXQ9k0LfDi4G7qiqR4cOArwO+NuqWq6qp4AbgJ8eOBMAVXV1VZ1dVeczmcb48tCZph5N8lKA6cd9sx5wWBd4kjCZq9xbVR8cOs8BSRaSnDC9fSyTX/Z7hspTVb9VVadV1U4mL8H/rKoG31pKcnyS0YHbwM8xeQk8mKr6OvBgktOnX7oQ+NKAkVa7jG0wfTL1AHBukuOm/w8vZJu8QZ7kJdOPLwd+ge3zM/s08Pbp7bcD/3PWA+Z6NsLpFez/KXBSkoeA91XV1fN8jk06D3gb8MXpfDPAe6rqfw2YCeClwMeSHMXkj+h1VbVtdt3bRk4Gbpz8/2cH8ImqumnYSAD8CnDNdMriq8AvDZyH6XzuzwK/PHQWgKq6Lcn1wB1Mpii+wPY5fP1TSU4EngIur6pvbXWA9boS+E/AdUneweQP4D+buR4PpZekNh3WUyiSdDizwCWpURa4JDXKApekRlngktQoC1ySGmWBS1Kj/j80Vhahg1qVjgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "centroids:\n",
      " [[2.98471616 1.26637555 1.38646288 1.31222707 2.05458515 1.35269841\n",
      "  2.08078603 1.2139738  1.10262009]\n",
      " [7.20408163 4.84693878 5.01020408 4.81632653 4.07142857 9.15861894\n",
      "  5.2244898  3.79591837 1.64285714]\n",
      " [6.72151899 8.36708861 8.40506329 7.81012658 6.73417722 9.2278481\n",
      "  7.36708861 7.82278481 3.82278481]\n",
      " [7.5625     7.421875   7.0625     4.25       5.875      3.61928075\n",
      "  5.5625     7.15625    2.234375  ]] \n",
      "\n",
      " centroids_normalized:\n",
      "\n",
      " [[8.23529412 9.11764706 8.70588235 7.58823529 8.70588235 6.76470588\n",
      "  6.17647059 8.23529412 9.41176471]\n",
      " [4.07171315 1.24701195 1.39840637 1.34661355 2.02788845 1.28176605\n",
      "  2.02788845 1.15139442 1.02788845]\n",
      " [8.5        5.89285714 6.35714286 3.67857143 4.53571429 9.03571429\n",
      "  6.53571429 8.60714286 2.21428571]\n",
      " [5.44444444 8.94444444 8.33333333 6.66666667 4.61111111 7.61111111\n",
      "  7.66666667 2.77777778 1.72222222]\n",
      " [5.71428571 5.71428571 4.42857143 9.28571429 6.85714286 2.42857143\n",
      "  3.28571429 2.57142857 1.28571429]\n",
      " [5.89285714 3.14285714 3.57142857 2.32142857 3.75       2.71747542\n",
      "  4.14285714 4.57142857 1.75      ]\n",
      " [7.375      4.54166667 4.29166667 9.125      4.54166667 9.875\n",
      "  5.875      3.875      2.58333333]\n",
      " [6.66666667 9.06666667 8.96666667 9.2        5.93333333 9.56666667\n",
      "  7.83333333 8.8        2.63333333]\n",
      " [3.2        5.73333333 6.53333333 7.26666667 6.53333333 8.8363104\n",
      "  5.73333333 8.26666667 2.2       ]\n",
      " [7.89285714 8.39285714 7.53571429 4.46428571 5.14285714 3.07461828\n",
      "  6.35714286 9.21428571 1.96428571]\n",
      " [1.2459893  1.12299465 1.21390374 1.13903743 1.97326203 1.26881249\n",
      "  1.98930481 1.06417112 1.10160428]\n",
      " [9.         9.42857143 9.         3.28571429 9.07142857 8.42857143\n",
      "  6.5        3.35714286 1.57142857]\n",
      " [4.68181818 3.5        4.31818182 2.81818182 4.81818182 9.36363636\n",
      "  4.09090909 3.54545455 1.27272727]\n",
      " [9.23333333 4.93333333 5.16666667 3.06666667 3.23333333 8.46666667\n",
      "  4.53333333 2.5        1.9       ]]\n"
     ]
    }
   ],
   "source": [
    "centroids2 = model.cluster_centers_\n",
    "print(\"size / shape of centroids2-object (rows, columns):\\n\", centroids2.shape)\n",
    "print(\"type of centroids2-object:\\n\",type(centroids))\n",
    "print(\"centroids2 min:\\n\", centroids2.min())\n",
    "print(\"centroids2 max:\\n\", centroids2.max())\n",
    "print('centroids2-array:\\n', centroids2)\n",
    "\n",
    "# data viz of centroids\n",
    "centroids2_0 = centroids2[0,:]\n",
    "centroids2_1 = centroids2[1,:]\n",
    "centroids2_2 = centroids2[2,:]\n",
    "centroids2_3 = centroids2[3,:]\n",
    "\n",
    "x = list(range(1,10))\n",
    "\n",
    "plt.scatter(centroids_0, x, marker = 'P', color = 'r', s=100)\n",
    "plt.title(\"Centroids_0\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids2_0, x, marker = 'P', color = 'r', s=100)\n",
    "plt.title(\"Centroids2_0 - normalized\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids_1, x, marker = 'D', color = 'y', s=100)\n",
    "plt.title(\"Centroids_1\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids2_1, x, marker = 'D', color = 'y', s=100)\n",
    "plt.title(\"Centroids2_1 normalized\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids_2, x, marker = 'o', color = 'g', s=100)\n",
    "plt.title(\"Centroids_2\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "plt.scatter(centroids2_2, x, marker = 'o', color = 'g', s=100)\n",
    "plt.title(\"Centroids2_2 Normalized\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(centroids_3, x, marker = 's', color = 'b', s=100)\n",
    "plt.title(\"Centroids_3\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "plt.scatter(centroids2_3, x, marker = 's', color = 'b', s=100)\n",
    "plt.title(\"Centroids2_3 Normalized\")\n",
    "plt.xlim([1, 10])\n",
    "plt.show()\n",
    "\n",
    "print('centroids:\\n', centroids, '\\n\\n centroids_normalized:\\n\\n',centroids2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cluster counts:\n",
      " 0    699\n",
      "dtype: int64\n",
      "     labels         A7\n",
      "0         0   1.000000\n",
      "461       0   5.000000\n",
      "462       0   1.000000\n",
      "463       0   1.000000\n",
      "464       0   1.000000\n",
      "465       0   4.000000\n",
      "466       0  10.000000\n",
      "467       0  10.000000\n",
      "468       0   1.000000\n",
      "469       0   1.000000\n",
      "470       0   1.000000\n",
      "471       0   1.000000\n",
      "472       0   1.000000\n",
      "473       0   1.000000\n",
      "474       0   1.000000\n",
      "475       0   1.000000\n",
      "476       0   1.000000\n",
      "477       0   1.000000\n",
      "460       0   1.000000\n",
      "459       0   1.000000\n",
      "458       0   1.000000\n",
      "457       0   3.000000\n",
      "439       0   1.000000\n",
      "440       0  10.000000\n",
      "441       0   4.000000\n",
      "442       0   3.000000\n",
      "443       0   2.000000\n",
      "444       0   1.000000\n",
      "445       0   1.000000\n",
      "446       0   1.000000\n",
      "..      ...        ...\n",
      "254       0   8.000000\n",
      "255       0  10.000000\n",
      "256       0   1.000000\n",
      "257       0   1.000000\n",
      "258       0   1.000000\n",
      "259       0   8.000000\n",
      "251       0  10.000000\n",
      "218       0   4.000000\n",
      "240       0   2.000000\n",
      "238       0   9.000000\n",
      "220       0   1.000000\n",
      "221       0  10.000000\n",
      "222       0   5.000000\n",
      "223       0   8.000000\n",
      "224       0  10.000000\n",
      "225       0   1.000000\n",
      "226       0  10.000000\n",
      "227       0   5.000000\n",
      "239       0  10.000000\n",
      "228       0   1.000000\n",
      "230       0   7.000000\n",
      "231       0   8.000000\n",
      "232       0   1.000000\n",
      "233       0  10.000000\n",
      "234       0   1.000000\n",
      "235       0   3.544656\n",
      "236       0  10.000000\n",
      "237       0   2.000000\n",
      "229       0  10.000000\n",
      "698       0   5.000000\n",
      "\n",
      "[699 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "#code from DataCamp \"unsupervised learning in python\" as giude source\n",
    "\n",
    "labels = pipeline_scaled.predict(df_noclass)\n",
    "df = pd.DataFrame({'labels': labels, 'A7': df_noclass['A7']})\n",
    "\n",
    "# Display df sorted by cluster label\n",
    "print('cluster counts:\\n', pd.value_counts(labels)) #how many of each class\n",
    "print(df.sort_values('labels'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1ffa6644e48>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.plot.scatter(x= 'labels', y= 'A7')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
